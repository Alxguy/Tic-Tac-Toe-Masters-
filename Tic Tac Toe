<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Glowing Tic Tac Toe</title>
    <style>
        body {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-color: #121212;
            color: #ffffff;
            font-family: Arial, sans-serif;
        }
        .container {
            text-align: center;
        }
        h1 {
            font-size: 2.5rem;
            margin-bottom: 20px;
            color: #00ffff;
            text-shadow: 0 0 10px #00ffff, 0 0 20px #00ffff;
        }
        #board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 10px;
            margin: 0 auto;
        }
        .cell {
            width: 100px;
            height: 100px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 3rem;
            color: #00ffff;
            cursor: pointer;
            background-color: #222;
            border-radius: 10px;
            transition: box-shadow 0.2s;
        }
        .cell:hover {
            box-shadow: 0 0 20px #00ffff;
        }
        .glow-text {
            color: #00ffff;
            text-shadow: 0 0 10px #00ffff, 0 0 20px #00ffff;
        }
        .controls {
            margin-top: 20px;
        }
        .controls button {
            padding: 10px 20px;
            margin: 5px;
            font-size: 1rem;
            cursor: pointer;
            background-color: #00ffff;
            color: #121212;
            border: none;
            border-radius: 5px;
            transition: background-color 0.2s;
        }
        .controls button:hover {
            background-color: #00dddd;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="glow-text">Glowing Tic Tac Toe</h1>
        <div id="board"></div>
        <div class="controls">
            <button onclick="startGame('PvP')">2 Players</button>
            <button onclick="startGame('PvC')">Vs Computer</button>
            <button onclick="resetGame()">Reset</button>
        </div>
        <p id="message" class="glow-text"></p>
    </div>

    <script>
        let board = ["", "", "", "", "", "", "", "", ""];
        let playerTurn = "X";
        let gameMode = "PvP"; // Default mode
        let winner = null;

        const boardDiv = document.getElementById("board");
        const message = document.getElementById("message");

        function startGame(mode) {
            gameMode = mode;
            resetGame();
            message.textContent = `${gameMode === 'PvC' ? "Player vs Computer" : "2 Players"} mode started!`;
        }

        function resetGame() {
            board = ["", "", "", "", "", "", "", "", ""];
            playerTurn = "X";
            winner = null;
            renderBoard();
            message.textContent = "Game reset!";
        }

        function renderBoard() {
            boardDiv.innerHTML = "";
            board.forEach((cell, index) => {
                const cellDiv = document.createElement("div");
                cellDiv.classList.add("cell");
                cellDiv.textContent = cell;
                cellDiv.addEventListener("click", () => handleMove(index));
                boardDiv.appendChild(cellDiv);
            });
        }

        function handleMove(index) {
            if (board[index] || winner) return;

            board[index] = playerTurn;
            checkWinner();
            playerTurn = playerTurn === "X" ? "O" : "X";

            renderBoard();

            if (!winner && gameMode === "PvC" && playerTurn === "O") {
                computerMove();
            }
        }

        function computerMove() {
            let emptyCells = board.map((v, i) => (v === "" ? i : null)).filter(v => v !== null);
            let move = emptyCells[Math.floor(Math.random() * emptyCells.length)];
            board[move] = "O";
            checkWinner();
            playerTurn = "X";
            renderBoard();
        }

        function checkWinner() {
            const winningCombos = [
                [0, 1, 2], [3, 4, 5], [6, 7, 8],
                [0, 3, 6], [1, 4, 7], [2, 5, 8],
                [0, 4, 8], [2, 4, 6]
            ];

            for (const combo of winningCombos) {
                const [a, b, c] = combo;
                if (board[a] && board[a] === board[b] && board[a] === board[c]) {
                    winner = board[a];
                    message.textContent = `${winner} wins!`;
                    return;
                }
            }

            if (!board.includes("")) {
                winner = "Tie";
                message.textContent = "It's a tie!";
            }
        }

        // Initialize board on load
        renderBoard();
    </script>
</body>
</html>
